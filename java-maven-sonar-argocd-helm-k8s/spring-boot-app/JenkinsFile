pipeline{
    agent any
    tools {
        maven 'MAVEN3'
    }
    environment {
        DOCKERHUBIMG = 'sahas616/my-java-image'
    }
    stages{
        stage('Clone Repository') {
            steps{
                sh 'echo Cloning repository'
                sh "echo ${WORKSPACE}"
                git branch: 'main', url: 'https://github.com/sahas616/JavaAppCICD.git'
            }
        }

        stage('Build Code') {
            steps{
                sh 'echo Building Code'
                sh 'pwd'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean install -DskipTests'
                sh 'pwd'
                //sh 'mvn install -DskipTests'
            }
        }

        stage('Unit Test') {
            steps {
                sh 'echo Starting Unit Test'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn test'
            }
        }

        stage('Sonar Scanner') {
            environment {
                SONAR_URL = "http://44.201.164.4:9000"
                }
            steps {
                sh 'echo Starting SonarTest'
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh '''
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                docker build -t ${DOCKERHUBIMG}:${BUILD_NUMBER} .
                '''
            }
        }
        
        stage('Push Docker Image to DockerHub') {
            steps {
                withCredentials([string(credentialsId: 'sahas616', variable: 'dockerHub')]) {
                    sh '''
                    docker login -u sahas616 -p ${dockerHub}
                    docker push ${DOCKERHUBIMG}:${BUILD_NUMBER}
                    '''
                }
            }
        }
        
        stage('Update Kubernetes Manifests') {
            environment {
                GIT_REPO_NAME = "JavaAppCICD"
                GIT_USER_NAME = "sahas616"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config --global user.email "souvik.saha@example.com"
                    git config --global user.name "Souvik Saha"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    #sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    sed -i "s/tag: [0-9]*/tag: $BUILD_NUMBER/" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/java-app/values.yaml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/java-app/values.yaml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
        }
    }
}
